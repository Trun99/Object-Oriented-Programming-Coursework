import tkinter as tk
import tkinter.scrolledtext as tkst

from track_library import TrackLibrary  # Import lớp thay vì module
import font_manager as fonts

# Function to set text in a text area
def set_text(text_area, content):
    text_area.delete("1.0", tk.END)
    text_area.insert("1.0", content)

# Class to handle the Check Track application
class CheckTracks:
    def __init__(self, window):
        # Tạo đối tượng TrackLibrary
        self.track_library = TrackLibrary()

        window.geometry("750x350")
        window.title("Check Track")

        list_track_btn = tk.Button(window, text="List All Track", command=self.list_track_clicked)
        list_track_btn.grid(row=0, column=0, padx=10, pady=10)

        enter_lbl = tk.Label(window, text="Enter Track Number")
        enter_lbl.grid(row=0, column=1, padx=10, pady=10)

        self.input_txt = tk.Entry(window, width=3)
        self.input_txt.grid(row=0, column=2, padx=10, pady=10)

        check_track_btn = tk.Button(window, text="Check Track", command=self.check_track_clicked)
        check_track_btn.grid(row=0, column=3, padx=10, pady=10)

        self.list_txt = tkst.ScrolledText(window, width=48, height=12, wrap="none")
        self.list_txt.grid(row=1, column=0, columnspan=3, sticky="W", padx=10, pady=10)

        self.track_txt = tk.Text(window, width=24, height=4, wrap="none")
        self.track_txt.grid(row=1, column=3, sticky="NW", padx=10, pady=10)

        self.status_lbl = tk.Label(window, text="", font=("Helvetica", 10))
        self.status_lbl.grid(row=2, column=0, columnspan=4, sticky="W", padx=10, pady=10)

        # Tự động liệt kê tất cả các track khi ứng dụng bắt đầu
        self.list_track_clicked()

    def check_track_clicked(self):
        key = self.input_txt.get()
        name = self.track_library.get_name(key)
        if name is not None:
            director = self.track_library.get_director(key)
            rating = self.track_library.get_rating(key)
            play_count = self.track_library.get_play_count(key)
            track_details = f"{name}\n{director}\nrating: {rating}\nplays: {play_count}"
            set_text(self.track_txt, track_details)
        else:
            set_text(self.track_txt, f"Track {key} not found")
        self.status_lbl.configure(text="Check track button was clicked!")

    def list_track_clicked(self):
        # Gọi phương thức list_all từ đối tượng TrackLibrary
        track_list = self.track_library.list_all()
        set_text(self.list_txt, track_list)
        self.status_lbl.configure(text="List track button was clicked!")

# Main entry point
if __name__ == "__main__":
    window = tk.Tk()
    fonts.configure()
    CheckTracks(window)
    window.mainloop()
